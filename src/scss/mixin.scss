// sass-lint:disable border-zero, quotes
/* ========== media mixin ========== */
// @use 'sass:math';

@use "sass:math";

@mixin rem {
    @media screen and (min-width:1280px) {
        @content;
    }
}

@mixin desktop-small{
  @media screen and (max-width:1439px) {
      @content;
  }
}

@mixin tablet{
    @media screen and (max-width:1279px) {
        @content;
    }
}

@mixin tablet-small {
    @media screen and (max-width:1023px) {
        @content;
    }
}

@mixin mobile {
    @media screen and (max-width:767px) {
        @content;
    }
}

@mixin mobile-small {
    @media screen and (max-width:666px) {
        @content;
    }
}

/* ========== common mixin ========== */

@mixin col{
    padding-left: 15px;
    padding-right: 15px;
}
@mixin row{
    margin-left: -15px;
    margin-right: -15px;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin transition($trans) {
  -webkit-transition: $trans;
  -moz-transition: $trans;
  transition: $trans;
}

@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}

@mixin flex-basis($flex-basis){
  -webkit-flex-basis:($flex-basis);
  flex-basis:($flex-basis);
}

@mixin display-flex($flex){
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: $flex;
}

@mixin align-item($align-item){
  -webkit-box-align: $align-item;
  -moz-box-align: $align-item;
  -ms-flex-align: $align-item;
  -webkit-align-items: $align-item;
  align-items: $align-item;
}

@mixin align-self($align-self){
  -webkit-align-self: $align-self;
  align-self: $align-self;
}

@mixin justify-content($justify-content){
  -webkit-justify-content: $justify-content;
  justify-content: $justify-content;
}

@mixin flex-wrap($flex-wrap){
  flex-wrap: $flex-wrap;
  -webkit-flex-wrap: $flex-wrap;
}

@mixin flex-direction($flex-direction){
  flex-direction: $flex-direction;
  -webkit-flex-direction: $flex-direction;
}

@mixin text-shadow($text-shadow) {
  text-shadow: 0px 0px 123.655px #FFFFFF, 0px 0px 70.6601px #FFFFFF, 0px 0px 41.2184px #FFFFFF, 0px 0px 20.6092px #FFFFFF, 0px 0px 5.88834px #FFFFFF, 0px 0px 2.94417px #FFFFFF;
}


@mixin box-design($box) {
  width: 345px;
  height: 1519px;
  @include tablet {
    width: 160px;
    height: 609px;
  }
}

/* ========== VW Functions ========== */

// @function get-vw($target) {
//   $vw-context: (2880*.01) * 1px;
//   @return ($target/$vw-context) * 1vw;
// }

// @function get-vw($target) {
//   $vw-context: (1920*.01) * 1px;
//   @return ($target/$vw-context) * 1vw;
// }

// @function get-rem($px,$vw) {
//   @return Max(($px/10px) * 1rem,#{get-vw($vw)});
// }

// @function get-vw($target) {
//   $vw-context: (1920*.01) * 1px;
//   @return ($target/$vw-context) * 1vw;
// }
// @function get-remm($value) {
//   @return ($value / 10px) * 1rem;
// }
// // @function get-min($min,$max) {
// //   @return Min(#{get-rem($min)}, #{get-vw($max)});
// // }
// @function pxToRem($pxValue) {
//   @return math.div($pxValue, 10px) * 1rem;
// }

// @function get-rem($px,$vw) {
//   @return Max(#{get-vw($px)} ,#{get-remm($vw)});
// }

@function get-vw-value($target) {
  $vw-context: (1920*.01) * 1px;
  @return math.div($target, $vw-context) * 1vw;
}
@function gett($pxx) {
  @return calc($pxx/10px) * 1rem;
}
@function get-rem($px,$vw) {
  @return Max(#{gett($px)},#{get-vw-value($vw)});
}
